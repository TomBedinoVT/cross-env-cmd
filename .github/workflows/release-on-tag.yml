name: Release on Tag

on:
  push:
    tags:
      - 'v*' # Se déclenche uniquement quand un tag comme v1.0.0 est poussé

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # nécessaire pour récupérer les tags

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Extract version from tag
        id: get_version
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          echo "version=${TAG#v}" >> $GITHUB_OUTPUT
          echo "Detected version: ${TAG#v}"

      - name: Update package.json version
        run: npm version ${{ steps.get_version.outputs.version }} --no-git-tag-version

      - name: Build project
        run: npm run build --if-present

      - name: Prepare release artifacts
        run: |
          mkdir -p release
          cp -r dist/* release/ 2>/dev/null || true
          cp package.json README.md release/
          cd release
          zip -r nodeapp-${{ steps.get_version.outputs.version }}.zip .

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: NodeApp ${{ github.ref_name }}
          body: |
            ## NodeApp ${{ github.ref_name }}

            Automated release triggered by tag push.

            ### Downloads
            - [nodeapp-${{ steps.get_version.outputs.version }}.zip](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/nodeapp-${{ steps.get_version.outputs.version }}.zip)
          draft: false
          prerelease: false

      - name: Upload ZIP artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/nodeapp-${{ steps.get_version.outputs.version }}.zip
          asset_name: nodeapp-${{ steps.get_version.outputs.version }}.zip
          asset_content_type: application/zip

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public
